# azure_pipelines_app.yml

name: AppPipeline_$(Date:yyyyMMdd)$(Rev:rr)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - app/*

pool:
  name: 'Agent pool'  

variables:
  awsServiceConnection: 'AWS_Access_Key'
  awsRegion: 'ap-south-1'   
  appDirectory: '$(System.DefaultWorkingDirectory)/app'
  terraformDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  terraformStateBucket: "bucket-for-speedtest"
  terraformStateKey: "terraform/terraform.tfstate"

stages:
- stage: DockerBuild
  displayName: 'Docker Build Stage'
  jobs:
  - job: InstallDocker
    displayName: 'Install Docker'
    steps:
    - checkout: self
    - script: |
        # Script copy from official Docker documentation
        # https://docs.docker.com/engine/install/ubuntu/
        
        echo "Installing Docker..."
        
        sudo apt-get update
        for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
        # Add Docker's official GPG key:
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update

        # Install latest version of Docker Engine and containerd:
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

        # Verify that Docker Engine is installed correctly by running the hello-world image:
        sudo docker run hello-world

      displayName: 'Install Docker'
      inputs:
        dockerVersion: 'latest'
  
  - job: BuildDockerImage
    displayName: 'Build Docker Image'
    dependsOn: InstallDocker
    steps:
    - script: |
        echo "Building Docker image..."
      displayName: 'Build step'
    - script: |
        cd $(appDirectory)
        docker build -t myapp:latest .
      displayName: 'Docker Build'
      workingDirectory: '$(appDirectory)'
