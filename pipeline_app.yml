# azure_pipelines_app.yml

name: AppPipeline_$(Date:yyyyMMdd)$(Rev:rr)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - app/*

pool:
  name: 'Agent pool'  

variables:
  awsServiceConnection: 'AWS_Access_Key'
  awsRegion: 'ap-south-1'   
  appDirectory: '$(System.DefaultWorkingDirectory)/app'
  terraformDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  terraformStateBucket: "bucket-for-speedtest"
  terraformStateKey: "terraform/terraform.tfstate"

stages:
- stage: DockerBuild
  displayName: 'Docker Build Stage'
  jobs:
  - job: InstallDocker
    displayName: 'Install Docker'
    steps:
    - checkout: self
    - script: |
        echo "Installing Docker..."
        # Assuming the agent has Docker pre-installed, otherwise you can use a task to install it
        sudo apt install gnome-terminal -y
        sudo apt-get install ./docker-desktop-amd64.deb
        systemctl --user start docker-desktop
        systemctl --user enable docker-desktop

      displayName: 'Install Docker'
  
  - job: BuildDockerImage
    displayName: 'Build Docker Image'
    dependsOn: InstallDocker
    steps:
    - script: |
        echo "Building Docker image..."
      displayName: 'Build step'
    - script: |
        cd $(appDirectory)
        docker build -t myapp:latest .
      displayName: 'Docker Build'
      workingDirectory: '$(appDirectory)'
