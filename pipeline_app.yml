# azure_pipelines_app.yml

name: AppPipeline_$(Date:yyyyMMdd)$(Rev:rr)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - app/*

pool:
  name: 'Agent pool'  

variables:
  DockerConnection: 'DockerHubConnection'
  awsRegion: 'ap-south-1'   
  appDirectory: '$(System.DefaultWorkingDirectory)/app'
  terraformDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  terraformStateBucket: "bucket-for-speedtest"
  terraformStateKey: "terraform/terraform.tfstate"
  Docker_repo: 'gokulmohanraj/speed_test_app'
  Build_tag: $(Build.BuildId)

stages:
- stage: DockerBuild
  displayName: 'Docker Build Stage'
  jobs:  
  - job: BuildDockerImage
    displayName: 'Build Docker Image'
    steps:
    - script: |
        echo "Building Docker image..."
      displayName: 'Preparation step'
    - task: Docker@2
      inputs:
        containerRegistry: '$(DockerConnection)'
        repository: '$(Docker_repo)'
        command: 'buildAndPush'
        Dockerfile: '$(appDirectory)/Dockerfile'
        tags: |
          latest
          $(Build_tag)
      displayName: 'Docker Build'

- stage: connect to speedtest-Instance
  displayName: 'Connect to Speedtest Instance'
  jobs:
  - job: ConnectToSpeedtest
    displayName: 'Connect to speedtest Instance'
    steps:
    - download: InfraPipeline
      artifact: 'EC2ConnectionInfo'
      displayName: 'Download EC2 Connection Info Artifact'

    - task: DownloadSecureFile@1
      name: 'sshkey' 
      displayName: 'Download SSH Key'
      inputs:
        secureFile: 'ec2-ssh-key'

    - script: |
        # The artifact is downloaded to $(Pipeline.Workspace)/<artifact-alias>/<file-path>
        EC2_PUBLIC_IP=$(cat $(Pipeline.Workspace)/InfraPipeline/ec2_public_ip.txt)

        echo "Retrieved EC2 Public IP: $EC2_PUBLIC_IP"
        
        echo "##vso[task.setvariable variable=ec2HostResolved;]$EC2_PUBLIC_IP" 
      displayName: 'Read EC2 IP from Artifact'